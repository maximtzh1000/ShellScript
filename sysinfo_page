#!/bin/bash

# sysinfo_page - A script to produce an HTML file

##### Constants

title="My System Information"
RIGHT_NOW=$(date +"%x %r %Z")
TIME_STAMP="Update on $RIGHT_NOW by $USER"

##### Functions

system_info(){
    echo "<h2>System release info</h2>"
    echo "<p>Function not yet implemented</p>"
} #end of system info

show_uptime(){
    echo "<h2>System uptime</h2>"
    echo "<pre>"
    uptime
    echo "</pre>"
} # endo of show_uptime

drive_space(){
    echo "<h2>Filesystem space</h2>"
    echo "<pre>"
    df
    echo "</pre>"
} # end of drive_space

write_page()
{
    echo "In write_page"
    cat <<- _EOF_
    <html>
        <head>
        <title>$TITLE</title>
        </head>
        <body>
        <h1>$TITLE</h1>
        <p>$TIME_STAMP</p>
        $(system_info)
        $(show_uptime)
        $(drive_space)
        </body>
    </html>
_EOF_

}


usage(){
    echo "usage: sysinfo_page [[[-f file ] [-i]]|[-h]]"
}

##### Main

interactive=
filename=~/sysinfo_page.html

while [ "$1" != "" ]; do
    case $1 in
        -f | --file )        shift
                             filename=$1
                             ;;
        -i | --interactive ) interactive=1
                             ;;
        -h | --help )        usage
                             exit
                             ;;
        * )                  usage
                             exit 1
    esac
    shift
done

## Test Code to verify command line processing

if [ "$interactive" = "1" ]; then
    echo "interactive is on"
else
    echo "interactive is off"
fi

echo "output file = $filename"

if [ "$interactive" = "1" ]; then
    response=

    echo -n "Enter name of output file [$filename] >"
    read response
    if [ -n "$response" ]; then
        filename=$response
    fi

    if [ -f $filename ]; then
        echo -n "Output file exists. Overwrite? (y/n)? >"
        read response
        if [ "$response" != "y" ]; then
            echo "Exiting program."
            exit 1
        fi
    fi
fi

#wirte page
write_page > $filename